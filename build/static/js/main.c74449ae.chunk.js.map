{"version":3,"sources":["sliderImages/1.jpg","sliderImages/2.jpg","sliderImages/3.jpg","sliderImages/4.jpg","sliderImages/5.jpg","sliderImages/6.jpg","sliderImages/7.jpg","sliderImages/8.jpg","sliderImages/body.jpg","sliderImages/book-2.jpg","components/common/DeleteButton.jsx","components/common/list.jsx","components/Department/Department.jsx","components/Homepage.jsx","components/common/Card.jsx","components/Batch/Batch.jsx","components/Features/Features.jsx","service/http.js","service/courseService.js","components/common/Button.jsx","components/utils/alert.js","service/authService.js","components/Course/Course.jsx","components/common/Form/AppForm.jsx","components/common/Form/errorMessage.jsx","components/common/Form/Input.jsx","components/common/Form/SubmitButton.jsx","components/common/Form/ImageFile.jsx","components/common/Form/ImageSubmitButton.jsx","components/CourseForm/CourseForm.jsx","service/noteService.js","components/common/Pagination.jsx","components/utils/paginate.js","components/common/TableHeader.jsx","components/common/TableBody.jsx","components/common/Table.jsx","components/Note/NoteTable.jsx","service/commentService.js","components/Note/Note.jsx","components/NoteForm/NoteForm.jsx","service/questionService.js","components/Question/QuestionTable.jsx","components/Question/Question.jsx","components/QuestionForm/questionForm.jsx","service/crService.js","components/Cr_info/CrTable.jsx","components/Cr_info/CrInfo.jsx","components/common/Form/Select.jsx","components/CrForm/CrForm.jsx","service/teacherService.js","components/Teacher_info/TeacherTable.jsx","components/Teacher_info/TeacherInfo.jsx","components/TeacherForm/TeacherForm.jsx","components/Navbar.jsx","components/LoginForm/LoginForm.jsx","service/userService.js","components/Profile/Profile.jsx","service/departmentService.js","service/batchService.js","components/RegistrationForm/RegistrationForm.jsx","components/Comment/ShowComments.jsx","components/Comment/CommentForm.jsx","components/Comment/Comment.jsx","components/common/ProtectedRouter.jsx","components/notFound.jsx","components/AustNoteBook.jsx","components/Logout.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","DeleteButton","handleClick","otherProps","IconButton","aria-label","size","onClick","fontSize","ListItems","items","selectedItem","linkTo","handleSelect","deleteButton","onDelete","secondTextProperty","textProperty","valueProperty","List","component","map","item","Fragment","key","className","to","ListItem","button","selected","ListItemText","primary","Divider","Department","departments","useState","seletedDepartment","setSeletedDepartment","department","_id","Homepage","images","image","image1","alt","image2","image3","image4","image6","image7","image8","image9","image10","id","data-ride","data-target","data-slide-to","_","range","length","i","src","image5","MyCard","subtitle1","subtitble2","customStyle","name","CardActionArea","Card","Avatar","CardContent","Typography","gutterBottom","variant","color","get","Batch","state","batches","this","props","filter","batch","match","params","departmentId","setState","prevProps","Component","Features","data","handleLink","getItems","find","batchId","axios","defaults","baseURL","process","interceptors","response","use","error","status","console","log","Promise","reject","post","put","delete","setJwt","jwt","headers","common","addCourse","courseTitle","courseNo","http","deleteCourse","MyButton","children","Button","alert","title","icon","Swal","fire","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","login","email","password","a","apiEndPoint","JwtToken","localStorage","setItem","logout","removeItem","getCurrentUser","token","getItem","decode","Course","filteredCourses","selectedCourse","path","handleLinkTo","course","handleDelete","originalCourses","c","value","toast","allCourses","isAdmin","role","AppForm","initialValues","onSubmit","validationSchema","ErrorMessage","visible","severity","Input","useFormikContext","handleChange","errors","setFieldTouched","touched","values","FormControl","fullWidth","TextField","onChange","onBlur","helperText","SubmitButtom","label","isValid","handleSubmit","type","disabled","setFieldValue","e","target","files","accept","ImageSubmitButton","htmlFor","CourseForm","validateSchema","Yup","shape","min","required","setErrors","history","goBack","noValidate","autoComplete","SubmitButton","getNotes","saveNote","semester","url","courseId","deleteNote","MyPagination","itemCounts","pageSize","pageOnChange","pageCounts","Math","ceil","Pagination","count","paginate","pageNumber","startIndex","slice","take","TableHeader","raiseSort","sortColumn","order","onSort","renderSortColumn","column","aria-hidden","TableHead","TableRow","style","cursor","columns","TableCell","MyTableBody","renderCell","content","createKey","TableBody","scope","MyTable","TableContainer","Paper","Table","NoteTable","note","user","href","rel","deleteColumn","push","notes","getCommentsByCourse","postComment","comment","deleteComment","Note","allNotes","filteredNotes","comments","currentPage","loading","Boolean","populateNotes","datePublished","Date","toLocaleString","populateComments","handlePageChange","page","handleTableSort","handleNoteDelete","originalNotes","n","handleCommentSubmit","resetForm","originalComments","currentUser","varsityId","photo","handleCommentDelete","sorted","orderBy","NoteForm","matches","mapToViewModel","notePath","replace","enableReinitialize","placeholder","getQuestions","saveQuestion","deleteQuestion","QuestionTable","question","questions","Question","allQuestions","filteredQuestions","populateQuestions","handleQuestionDelete","originalQuestions","q","QuestionForm","questionPath","addCr","section","group","phoneNumber","deleteCr","CrTable","cr","crs","CrInfo","allCrs","filteredCrs","handleCrDelete","originalCrs","MySelect","InputLabel","Select","labelId","MenuItem","FormHelperText","CrForm","allGroup","A","B","C","D","selectedGroup","max","toUpperCase","handleSection","sec","crPath","addTeacher","deleteTeacher","TeacherTable","teacher","teachers","TeacherInfo","allTeachers","filteredTeachers","handleTeacherDelete","originalTeachers","t","Teachers","TeacherForm","teacherPath","Navbar","data-toggle","aria-controls","aria-expanded","PROFILE_PICTURE_URL","LoginForm","success","location","window","from","pathname","registration","firstName","lastName","addProfilePicture","file","formData","FormData","append","Profile","reload","ImageFile","getDepartments","getBatchById","RegistrationForm","handleDepartmentSelection","confirmPassword","oneOf","ShowComments","CommentForm","borderRadius","multiline","rows","Comment","filteredComments","ProtectedRouter","render","rest","notFound","AustNoteBook","abortController","AbortController","departmentsObject","batchesObject","exact","Logout","App","setUser","getUser","info","useEffect","Login","Registration","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch","message"],"mappings":"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","file":"static/js/main.c74449ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.000541af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.606e74fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.d160b6c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.e6c9b204.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.217aad15.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.4c7d5cec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.dc0b120f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.793c87a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/body.8a83929f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book-2.1e626ed4.jpg\";","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst DeleteButton = ({ handleClick, ...otherProps }) => {\r\n  return (\r\n    <IconButton\r\n      aria-label=\"delete\"\r\n      size=\"small\"\r\n      onClick={handleClick}\r\n      {...otherProps}\r\n    >\r\n      <DeleteIcon fontSize=\"small\" />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, ListItem, ListItemText, Divider } from \"@material-ui/core\";\r\nimport DeleteButton from \"../common/DeleteButton\";\r\n\r\nconst ListItems = ({\r\n  items,\r\n  selectedItem,\r\n  linkTo,\r\n  handleSelect,\r\n  deleteButton,\r\n  onDelete,\r\n  secondTextProperty = \"\",\r\n  textProperty = \"name\",\r\n  valueProperty = \"_id\",\r\n}) => {\r\n  return (\r\n    <List component=\"ul\">\r\n      {items.map((item) => (\r\n        <React.Fragment key={item[valueProperty]}>\r\n          {linkTo && (\r\n            <div className=\"row align-items-center\">\r\n              <Link to={linkTo(item)} className=\"text-decoration-none col-10\">\r\n                <ListItem\r\n                  button\r\n                  onClick={() => handleSelect(item)}\r\n                  selected={selectedItem === item}\r\n                >\r\n                  <ListItemText\r\n                    primary={item[textProperty]}\r\n                    className=\"text-white text-center\"\r\n                  />\r\n                  {secondTextProperty && (\r\n                    <ListItemText\r\n                      primary={item[secondTextProperty]}\r\n                      className=\"text-center text-dark\"\r\n                    />\r\n                  )}\r\n                </ListItem>\r\n                <Divider />\r\n              </Link>\r\n              {deleteButton && (\r\n                <div className=\"col-2\">\r\n                  <DeleteButton\r\n                    handleClick={() => onDelete(item)}\r\n                    className=\"deleteButton\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {!linkTo && (\r\n            <React.Fragment className=\"row align-items-center\">\r\n              <div className=\"col-10\">\r\n                <ListItem\r\n                  button\r\n                  onClick={() => handleSelect(item)}\r\n                  selected={selectedItem === item}\r\n                  className=\"text-center\"\r\n                >\r\n                  <ListItemText\r\n                    primary={item[textProperty]}\r\n                    className=\"text-white text-center\"\r\n                  />\r\n                  {secondTextProperty && (\r\n                    <ListItemText\r\n                      primary={item[secondTextProperty]}\r\n                      className=\"text-center text-dark\"\r\n                    />\r\n                  )}\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n              {deleteButton && (\r\n                <div className=\"col-2\">\r\n                  <DeleteButton\r\n                    handleClick={() => onDelete(item)}\r\n                    className=\"deleteButton\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\n// ListItems.defaultProps = {\r\n//   textProperty: \"name\",\r\n//   valueProperty: \"_id\",\r\n// };\r\n\r\nexport default ListItems;\r\n","import React, { useState } from \"react\";\r\nimport ListItems from \"../common/list\";\r\n\r\nconst Department = ({ departments }) => {\r\n  const [seletedDepartment, setSeletedDepartment] = useState({});\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItems\r\n        items={departments}\r\n        selectedItem={seletedDepartment}\r\n        linkTo={(department) => `/aust-note-book/${department._id}/batches`}\r\n        handleSelect={(department) => setSeletedDepartment(department)}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  image1,\r\n  image2,\r\n  image3,\r\n  image4,\r\n  image5,\r\n  image6,\r\n  image7,\r\n  image8,\r\n  image9,\r\n  image10,\r\n} from \"../sliderImages\";\r\n\r\nconst Homepage = () => {\r\n  const images = [\r\n    { image: image1, alt: \"image1\" },\r\n    { image: image2, alt: \"image2\" },\r\n    { image: image3, alt: \"image3\" },\r\n    { image: image4, alt: \"image4\" },\r\n    { image: image6, alt: \"image6\" },\r\n    { image: image7, alt: \"image7\" },\r\n    { image: image8, alt: \"image8\" },\r\n    { image: image9, alt: \"image9\" },\r\n    { image: image10, alt: \"image10\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n      <div\r\n        id=\"carouselExampleIndicators\"\r\n        className=\"carousel slide col-8\"\r\n        data-ride=\"carousel\"\r\n      >\r\n        <ol className=\"carousel-indicators\">\r\n          <li\r\n            data-target=\"#carouselExampleIndicators\"\r\n            data-slide-to=\"0\"\r\n            className=\"active\"\r\n          ></li>\r\n          {_.range(1, images.length + 1).map((i) => (\r\n            <li\r\n              data-target=\"#carouselExampleIndicators\"\r\n              key={i}\r\n              data-slide-to={i}\r\n            ></li>\r\n          ))}\r\n        </ol>\r\n        <div className=\"carousel-inner\">\r\n          <div className=\"carousel-item active\">\r\n            <img src={image5} className=\"d-block w-100\" alt=\"image5\" />\r\n          </div>\r\n          {images.map((image) => (\r\n            <div className=\"carousel-item\" key={image.image}>\r\n              <img\r\n                src={image.image}\r\n                className=\"d-block w-100\"\r\n                alt={image.alt}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MyCard = ({\r\n  items,\r\n  subtitle1,\r\n  subtitble2,\r\n  linkTo,\r\n  customStyle,\r\n  textProperty = \"name\",\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row w-100 h-100 align-content-center justify-content-center m-0 p-3\">\r\n        {items.map((item) => (\r\n          <FadeIn className={`${customStyle} my-3`} key={item._id || item.name}>\r\n            <Link to={linkTo(item)} className=\"text-decoration-none\">\r\n              <CardActionArea className=\"w-100 h-100\">\r\n                <Card className=\"w-100 h-100 myCard\">\r\n                  <Avatar className=\"bg-primary ml-2 mt-1\">\r\n                    <PageviewIcon />\r\n                  </Avatar>\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                      {item[textProperty]}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                      {_.get(item, subtitle1)}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {subtitble2}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </CardActionArea>\r\n            </Link>\r\n          </FadeIn>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Card from \"../common/Card\";\r\nclass Batch extends Component {\r\n  state = {\r\n    batches: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const allBatches = this.props.batches;\r\n    const batches = allBatches.filter(\r\n      (batch) =>\r\n        _.get(batch, \"department._id\") === this.props.match.params.departmentId\r\n    );\r\n\r\n    this.setState({ batches });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps !== this.props) {\r\n      const allBatches = this.props.batches;\r\n      const batches = allBatches.filter(\r\n        (batch) => batch.department._id === this.props.match.params.departmentId\r\n      );\r\n      this.setState({ batches });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { batches } = this.state;\r\n    return (\r\n      <Card\r\n        items={batches}\r\n        linkTo={(batch) => `/aust-note-book/${batch._id}/features`}\r\n        subtitle1=\"department.name\"\r\n        subtitble2=\"Click for Notes, Questions and many more\"\r\n        customStyle=\"col-xl-3 col-lg-3 col-md-5 col-sm-5\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Batch;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./../common/Card\";\r\n\r\nclass Features extends Component {\r\n  state = { data: [], batch: {} };\r\n\r\n  componentDidMount() {\r\n    const { batches, match } = this.props;\r\n    const batch = batches.find((batch) => batch._id === match.params.batchId);\r\n    const data = [\r\n      { name: \"Class Notes\", id: 1 },\r\n      { name: \"Question Bank\", id: 2 },\r\n      { name: \"Teacher's Information\", id: 3 },\r\n      { name: \"Cr's Information\", id: 4 },\r\n    ];\r\n    this.setState({ data, batch });\r\n  }\r\n\r\n  handleLink = (item) => {\r\n    const { batch } = this.state;\r\n    if (item.id === 1) return `/aust-note-book/${batch._id}/courses/notes`;\r\n    if (item.id === 2) return `/aust-note-book/${batch._id}/courses/questions`;\r\n    if (item.id === 3) return `/aust-note-book/${batch._id}/teacher_infos`;\r\n    if (item.id === 4) return `/aust-note-book/${batch._id}/cr_infos`;\r\n  };\r\n\r\n  getItems = () => {\r\n    let { data, batch } = this.state;\r\n    data = data.map((item) => ({ ...item, batch: batch }));\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card\r\n          items={this.getItems()}\r\n          subtitle1=\"batch.name\"\r\n          subtitble2=\"\"\r\n          customStyle=\"col-lg-5 col-xl-5 col-md-5 col-sm-6\"\r\n          linkTo={this.handleLink}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Features;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(error);\r\n    console.log(\"Unexpected error occured.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/courses\";\r\n\r\nexport const getCourses = () => {\r\n  return http.get(apiEndPoint);\r\n};\r\n\r\nexport const getCourseById = (id) => {\r\n  return http.get(apiEndPoint + `/${id}`);\r\n};\r\n\r\nexport const addCourse = (courseTitle, courseNo, batchId) => {\r\n  return http.post(apiEndPoint, {\r\n    courseTitle,\r\n    courseNo,\r\n    batchId,\r\n  });\r\n};\r\n\r\nexport function deleteCourse(id) {\r\n  return http.delete(apiEndPoint + `/${id}`);\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst MyButton = ({ children, ...otherProps }) => {\r\n  return (\r\n    <Button className=\"m-2\" variant=\"contained\" {...otherProps}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","import Swal from \"sweetalert2\";\r\nimport \"sweetalert2/dist/sweetalert2.css\";\r\n\r\nexport const alert = (title, icon) => {\r\n  return Swal.fire({\r\n    title: `${title}`,\r\n    icon: `${icon}`,\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes\",\r\n  });\r\n};\r\n","import http from \"./http\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst apiEndPoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nexport async function login(email, password) {\r\n  const { data: JwtToken } = await http.post(apiEndPoint + \"/login\", {\r\n    email,\r\n    password,\r\n  });\r\n  localStorage.setItem(tokenKey, JwtToken);\r\n}\r\n\r\nexport async function logout() {\r\n  await http.get(apiEndPoint + \"/logout\");\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const token = localStorage.getItem(tokenKey);\r\n    return jwt.decode(token);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\n\r\nimport { getCourses, deleteCourse } from \"./../../service/courseService\";\r\nimport ListItems from \"./../common/list\";\r\nimport \"./course.css\";\r\nimport Button from \"../common/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { alert } from \"./../utils/alert\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\n\r\nclass Course extends Component {\r\n  state = {\r\n    filteredCourses: [],\r\n    selectedCourse: {},\r\n    path: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n    const {\r\n      data: { data: allCourses },\r\n    } = await getCourses();\r\n\r\n    const filteredCourses = allCourses.filter(\r\n      (course) => _.get(course, \"batch._id\") === match.params.batchId\r\n    );\r\n\r\n    const path = match.params.path;\r\n    this.setState({ filteredCourses, path });\r\n  }\r\n\r\n  handleLinkTo = (course) => {\r\n    const path = this.state.path;\r\n    const { batchId } = this.props.match.params;\r\n    return `/aust-note-book/${batchId}/${course._id}/${path}`;\r\n  };\r\n\r\n  handleDelete = async (course) => {\r\n    const originalCourses = this.state.filteredCourses;\r\n    const filteredCourses = originalCourses.filter((c) => c._id !== course._id);\r\n\r\n    const { value } = await alert(\"Are you sure?\", \"warning\");\r\n\r\n    if (value) {\r\n      this.setState({ filteredCourses });\r\n      try {\r\n        await deleteCourse(course._id);\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          toast.error(\"This course has already been deleted.\");\r\n          this.setState({ filteredCourses: originalCourses });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { batchId } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"row h-100 w-100 justify-content-center align-content-center\">\r\n        {(getCurrentUser().batch === batchId || getCurrentUser().isAdmin) && (\r\n          <div className=\"col-10 row justify-content-start\">\r\n            <Button color=\"primary\">\r\n              <Link\r\n                to={`/aust-note-book/${batchId}/add-course`}\r\n                className=\"text-decoration-none text-white\"\r\n              >\r\n                Add Course\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <FadeIn className=\"col-10 courseContaier\">\r\n          <ListItems\r\n            items={this.state.filteredCourses}\r\n            textProperty=\"courseTitle\"\r\n            secondTextProperty=\"courseNo\"\r\n            selectedItem={this.state.selectedCourse}\r\n            handleSelect={(course) => this.setState({ selectedCourse: course })}\r\n            linkTo={this.handleLinkTo}\r\n            deleteButton={\r\n              (getCurrentUser().role === \"co-admin\" &&\r\n                getCurrentUser().batch === batchId) ||\r\n              getCurrentUser().isAdmin\r\n            }\r\n            onDelete={this.handleDelete}\r\n          />\r\n        </FadeIn>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Course;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nconst AppForm = ({\r\n  initialValues,\r\n  onSubmit,\r\n  validationSchema,\r\n  children,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n      validationSchema={validationSchema}\r\n      {...otherProps}\r\n    >\r\n      {() => <>{children}</>}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AppForm;\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = ({ error, visible }) => {\r\n  if (!visible || !error) return null;\r\n\r\n  return (\r\n    <div severity=\"error\" className=\"text-danger\">\r\n      <p>{error}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport { TextField, FormControl } from \"@material-ui/core\";\r\nimport { useFormikContext } from \"formik\";\r\n// import ErrorMessage from \"./errorMessage\";\r\n\r\nconst Input = ({ name, ...otherProps }) => {\r\n  const {\r\n    handleChange,\r\n    errors,\r\n    setFieldTouched,\r\n    touched,\r\n    values,\r\n  } = useFormikContext();\r\n\r\n  const isError = (error, visible) => {\r\n    if (!visible || !error) return false;\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <TextField\r\n        onChange={handleChange(name)}\r\n        onBlur={() => setFieldTouched(name)}\r\n        value={values[name]}\r\n        error={isError(errors[name], touched[name])}\r\n        helperText={errors[name]}\r\n        {...otherProps}\r\n      />\r\n      {/* <ErrorMessage error={errors[name]} visible={touched[name]} /> */}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nconst SubmitButtom = ({ label, ...otherProps }) => {\r\n  const { isValid, handleSubmit } = useFormikContext();\r\n\r\n  return (\r\n    <Button\r\n      className=\"m-2\"\r\n      variant=\"contained\"\r\n      type=\"submit\"\r\n      disabled={!isValid}\r\n      onClick={handleSubmit}\r\n      {...otherProps}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SubmitButtom;\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport ErrorMessage from \"./errorMessage\";\r\n\r\nconst Input = ({ name, ...otherProps }) => {\r\n  const {\r\n    setFieldValue,\r\n    errors,\r\n    setFieldTouched,\r\n    touched,\r\n  } = useFormikContext();\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        name={name}\r\n        onChange={(e) => {\r\n          setFieldValue(\"file\", e.target.files[0]);\r\n        }}\r\n        onBlur={() => setFieldTouched(name)}\r\n        accept=\"image/*\"\r\n        type=\"file\"\r\n        {...otherProps}\r\n      />\r\n      <ErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst ImageSubmitButton = ({ label, htmlFor, ...otherProps }) => {\r\n  return (\r\n    <label htmlFor={htmlFor}>\r\n      <IconButton\r\n        color=\"primary\"\r\n        aria-label=\"upload picture\"\r\n        component=\"span\"\r\n        {...otherProps}\r\n      >\r\n        <PhotoCamera />\r\n      </IconButton>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ImageSubmitButton;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { alert } from \"../utils/alert\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Input, SubmitButton, AppForm } from \"../common/Form\";\r\nimport { getCurrentUser } from \"../../service/authService\";\r\nimport { addCourse } from \"../../service/courseService\";\r\nimport \"./courseForm.css\";\r\n\r\nclass CourseForm extends Component {\r\n  validateSchema = Yup.object().shape({\r\n    courseTitle: Yup.string().min(3).required().label(\"First Name\"),\r\n    courseNo: Yup.string().min(3).required().label(\"Last Name\"),\r\n  });\r\n\r\n  handleSubmit = async ({ courseTitle, courseNo }, { setErrors }) => {\r\n    try {\r\n      const { value } = await alert(\"Are you confirm?\", \"warning\");\r\n      if (value) {\r\n        const batchId = this.props.match.params.batchId;\r\n\r\n        await addCourse(courseTitle, courseNo, batchId);\r\n        this.props.history.goBack();\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const { data } = error.response;\r\n        setErrors({ courseTitle: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      getCurrentUser().batch === this.props.match.params.batchId ||\r\n      getCurrentUser().isAdmin\r\n    )\r\n      return (\r\n        <>\r\n          <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n            <div className=\"col-8 row  p-0 m-0 justify-content-center align-items-center\">\r\n              <div className=\"courseContainer\">\r\n                <div className=\"courseHeader\">\r\n                  <h3 className=\"m-0 p-0\">Add Course</h3>\r\n                </div>\r\n                <div className=\"p-5\">\r\n                  <AppForm\r\n                    initialValues={{\r\n                      courseTitle: \"\",\r\n                      courseNo: \"\",\r\n                    }}\r\n                    onSubmit={this.handleSubmit}\r\n                    validationSchema={this.validateSchema}\r\n                  >\r\n                    <form noValidate autoComplete=\"off\" className=\"mt-1\">\r\n                      <Input\r\n                        name=\"courseTitle\"\r\n                        label=\"Course Title\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <Input\r\n                        name=\"courseNo\"\r\n                        label=\"Course No\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <SubmitButton\r\n                        color=\"primary\"\r\n                        className=\"mt-4 w-100\"\r\n                        label=\"Add Course\"\r\n                      />\r\n                    </form>\r\n                  </AppForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default CourseForm;\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/notes\";\r\n\r\nexport function getNotes() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function saveNote(_id, name, semester, url, courseId) {\r\n  if (_id) {\r\n    return http.put(apiEndPoint + `/${_id}`, { name, semester, url });\r\n  }\r\n\r\n  return http.post(apiEndPoint, { name, semester, url, courseId });\r\n}\r\n\r\nexport function deleteNote(id) {\r\n  return http.delete(apiEndPoint + `/${id}`);\r\n}\r\n\r\nexport function getNoteById(id) {\r\n  return http.get(apiEndPoint + `/${id}`);\r\n}\r\n","import React from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst MyPagination = ({ itemCounts, pageSize, pageOnChange }) => {\r\n  const pageCounts = Math.ceil(itemCounts / pageSize);\r\n  if (pageCounts === 1) return null;\r\n\r\n  return (\r\n    <Pagination\r\n      count={pageCounts}\r\n      onChange={(e, value) => pageOnChange(value)}\r\n      color=\"primary\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyPagination;\r\n","import _ from \"lodash\";\r\n\r\nexport const paginate = (items, pageSize, pageNumber) => {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { TableCell, TableHead, TableRow } from \"@material-ui/core\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortColumn = (column) => {\r\n    if (column.path !== this.props.sortColumn.path) return null;\r\n\r\n    if (this.props.sortColumn.order === \"asc\")\r\n      return (\r\n        <span>\r\n          <i className=\"fa fa-sort-amount-asc\" aria-hidden=\"true\"></i>\r\n        </span>\r\n      );\r\n\r\n    return (\r\n      <span>\r\n        <i className=\"fa fa-sort-amount-desc\" aria-hidden=\"true\"></i>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TableHead className=\"bg-primary\">\r\n        <TableRow style={{ cursor: \"pointer\" }}>\r\n          {this.props.columns.map((column) => (\r\n            <TableCell\r\n              className=\"text-white\"\r\n              onClick={() => this.raiseSort(column.path)}\r\n              key={column.path || column.key}\r\n            >\r\n              {column.label} {column.path && this.renderSortColumn(column)}\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { TableBody, TableCell, TableRow } from \"@material-ui/core\";\r\n\r\nclass MyTableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <TableBody>\r\n        {data.map((item) => (\r\n          <TableRow key={item._id}>\r\n            {columns.map((column) => (\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"note\"\r\n                key={this.createKey(item, column)}\r\n              >\r\n                {this.renderCell(item, column)}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyTableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"../common/TableHeader\";\r\nimport TableBody from \"../common/TableBody\";\r\nimport { Table, TableContainer, Paper } from \"@material-ui/core\";\r\n\r\nconst MyTable = ({ sortColumn, columns, onSort, data }) => {\r\n  return (\r\n    <TableContainer component={Paper} className=\"mt-5\">\r\n      <Table aria-label=\"simple table\">\r\n        <TableHeader\r\n          sortColumn={sortColumn}\r\n          columns={columns}\r\n          onSort={onSort}\r\n        />\r\n        <TableBody data={data} columns={columns} />\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default MyTable;\r\n","import React, { Component } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport MyTable from \"../common/Table\";\r\nimport DeleteButton from \"../common/DeleteButton\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NoteTable extends Component {\r\n  state = {};\r\n\r\n  columns = [\r\n    {\r\n      label: \"Name\",\r\n      path: \"name\",\r\n      content: (note) => {\r\n        if (note.user._id === getCurrentUser()._id || getCurrentUser().isAdmin)\r\n          return (\r\n            <Link\r\n              to={`/aust-note-book/${this.props.batchId}/${this.props.courseId}/note/${note._id}`}\r\n              className=\"font-weight-bold\"\r\n            >\r\n              {note.name}\r\n            </Link>\r\n          );\r\n        else return <span className=\"\">{note.name}</span>;\r\n      },\r\n    },\r\n    { label: \"Semester\", path: \"semester\" },\r\n    { label: \"Added By\", path: \"user.varsityId\" },\r\n    { label: \"Date Upload\", path: \"datePublished\" },\r\n    {\r\n      label: \"File\",\r\n      key: \"file\",\r\n      content: (note) => (\r\n        <a href={`${note.url}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Download\r\n        </a>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (note) =>\r\n      (note.user._id === getCurrentUser()._id || getCurrentUser().isAdmin) && (\r\n        <DeleteButton\r\n          handleClick={() => this.props.onDelete(note)}\r\n          className=\"deleteButton\"\r\n        />\r\n      ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { notes, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <FadeIn className=\"container m-2\">\r\n        <MyTable\r\n          onSort={onSort}\r\n          data={notes}\r\n          sortColumn={sortColumn}\r\n          columns={this.columns}\r\n        />\r\n      </FadeIn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteTable;\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/courses\";\r\n\r\nexport const getCommentsByCourse = (courseId, path) => {\r\n  return http.get(apiEndPoint + `/${courseId}/comments?path=${path}`);\r\n};\r\n\r\nexport const postComment = (courseId, comment, path) => {\r\n  return http.post(apiEndPoint + `/${courseId}/comments`, { comment, path });\r\n};\r\n\r\nexport const deleteComment = (courseId, id) => {\r\n  return http.delete(apiEndPoint + `/${courseId}/comments/${id}`);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { SemipolarLoading } from \"react-loadingg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport Button from \"../common/Button\";\r\nimport { getNotes, deleteNote } from \"./../../service/noteService\";\r\nimport { alert } from \"../utils/alert\";\r\n\r\nimport Pagination from \"./../common/Pagination\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport NoteTable from \"./NoteTable\";\r\nimport { Comment } from \"../index\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport {\r\n  getCommentsByCourse,\r\n  deleteComment,\r\n  postComment,\r\n} from \"./../../service/commentService\";\r\nimport \"./note.css\";\r\n\r\nclass Note extends Component {\r\n  state = {\r\n    allNotes: [],\r\n    filteredNotes: [],\r\n    comments: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    sortColumn: {},\r\n    loading: Boolean,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setState({ loading: true });\r\n      await this.populateNotes();\r\n      await this.populateComments();\r\n      this.setState({ loading: false });\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong.\");\r\n    }\r\n  }\r\n\r\n  populateNotes = async () => {\r\n    const { courseId } = this.props.match.params;\r\n    let {\r\n      data: { data: allNotes },\r\n    } = await getNotes();\r\n\r\n    allNotes = allNotes.map((note) => ({\r\n      ...note,\r\n      datePublished: new Date(note.datePublished).toLocaleString(),\r\n    }));\r\n\r\n    const filteredNotes = allNotes.filter(\r\n      (note) => note.course._id === courseId\r\n    );\r\n    this.setState({ allNotes, filteredNotes });\r\n  };\r\n\r\n  populateComments = async () => {\r\n    const { courseId } = this.props.match.params;\r\n    const {\r\n      data: { data: comments },\r\n    } = await getCommentsByCourse(courseId, \"notes\");\r\n\r\n    this.setState({ comments });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleTableSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleNoteDelete = async (note) => {\r\n    const originalNotes = this.state.filteredNotes;\r\n\r\n    const filteredNotes = originalNotes.filter((n) => n._id !== note._id);\r\n    const { value } = await alert(\"Are you sure?\", \"warning\");\r\n    if (value) {\r\n      this.setState({ filteredNotes });\r\n      try {\r\n        await deleteNote(note._id);\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          toast.error(\"This note has already been deleted.\");\r\n\r\n          this.setState({ filteredNotes: originalNotes });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCommentSubmit = async ({ comment }, { resetForm }) => {\r\n    const { courseId } = this.props.match.params;\r\n    const originalComments = this.state.comments;\r\n    try {\r\n      const currentUser = getCurrentUser();\r\n      const comments = [\r\n        {\r\n          _id: comment,\r\n          user: {\r\n            varsityId: currentUser.varsityId,\r\n            photo: currentUser.photo,\r\n          },\r\n          comment: comment,\r\n        },\r\n        ...originalComments,\r\n      ];\r\n      this.setState({ comments });\r\n      await postComment(courseId, comment, \"notes\");\r\n      resetForm({ values: \"\" });\r\n    } catch (error) {\r\n      this.setState({ comments: originalComments });\r\n      toast.error(\"Something went wrong. comment not posted\");\r\n    }\r\n  };\r\n\r\n  handleCommentDelete = async (comment) => {\r\n    const { courseId } = this.props.match.params;\r\n    const originalComments = this.state.comments;\r\n    try {\r\n      const { value } = await alert(\"Are you confirm?\", \"warning\");\r\n      if (value) {\r\n        const comments = originalComments.filter((c) => c._id !== comment._id);\r\n        this.setState({ comments });\r\n        await deleteComment(courseId, comment._id);\r\n      }\r\n    } catch (error) {\r\n      this.setState({ comments: originalComments });\r\n      toast.error(\"Comment already deleted\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      filteredNotes,\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      comments,\r\n    } = this.state;\r\n    const { batchId, courseId } = this.props.match.params;\r\n\r\n    const sorted = _.orderBy(\r\n      filteredNotes,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n    const notes = paginate(sorted, pageSize, currentPage);\r\n\r\n    if (this.state.loading) return <SemipolarLoading />;\r\n\r\n    return (\r\n      <div className=\"row justify-content-center h-100 w-100\">\r\n        <div className=\"col-11 p-0 m-0 text-left\">\r\n          <NoteTable\r\n            notes={notes}\r\n            onSort={this.handleTableSort}\r\n            onDelete={this.handleNoteDelete}\r\n            sortColumn={sortColumn}\r\n            courseId={courseId}\r\n            batchId={batchId}\r\n          />\r\n        </div>\r\n        {(getCurrentUser().batch === batchId || getCurrentUser().isAdmin) && (\r\n          <div className=\"col-9 row justify-content-between align-items-center\">\r\n            <p className=\"text-white\">Total Notes: {filteredNotes.length}</p>\r\n            <Button color=\"primary\">\r\n              <Link\r\n                to={`/aust-note-book/${batchId}/${courseId}/note/add-note`}\r\n                className=\"text-decoration-none text-white\"\r\n              >\r\n                Add Note\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className=\"col-12 mt-2 d-flex justify-content-center\">\r\n          <Pagination\r\n            itemCounts={filteredNotes.length}\r\n            pageOnChange={this.handlePageChange}\r\n            pageSize={pageSize}\r\n          />\r\n        </div>\r\n        {(getCurrentUser().batch === batchId || getCurrentUser().isAdmin) && (\r\n          <div className=\"col-11 mt-3 p-5 text-left\">\r\n            <p className=\"text-white\">Total Comments: {comments.length}</p>\r\n            <Comment\r\n              comments={comments}\r\n              courseId={courseId}\r\n              path=\"notes\"\r\n              handleCommentSubmit={this.handleCommentSubmit}\r\n              handleCommentDelete={this.handleCommentDelete}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { alert } from \"../utils/alert\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Input, SubmitButton, AppForm } from \"../common/Form\";\r\nimport { getCurrentUser } from \"../../service/authService\";\r\nimport { saveNote, getNoteById } from \"../../service/noteService\";\r\nimport \"./noteForm.css\";\r\n\r\nclass NoteForm extends Component {\r\n  state = {\r\n    note: {\r\n      _id: \"\",\r\n      name: \"\",\r\n      semester: \"\",\r\n      url: \"\",\r\n    },\r\n  };\r\n\r\n  validateSchema = Yup.object().shape({\r\n    name: Yup.string().min(3).required().label(\"First Name\"),\r\n    semester: Yup.string()\r\n      .min(3)\r\n      .required()\r\n      .matches(\r\n        /^(spring|fall)(-)(20)(\\d\\d)$/i,\r\n        'Format have to \"spring-xxxx\" or \"fall-xxxx\"'\r\n      )\r\n      .label(\"Last Name\"),\r\n    url: Yup.string().required().label(\"Url\"),\r\n  });\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const { notePath } = this.props.match.params;\r\n\r\n      if (notePath === \"add-note\") return;\r\n      const { data: note } = await getNoteById(notePath);\r\n\r\n      this.setState({ note: this.mapToViewModel(note) });\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        (error.response.status === 404 || error.response.status === 400)\r\n      )\r\n        this.props.history.replace(\"/aust-note-book/not-found\");\r\n    }\r\n  }\r\n\r\n  mapToViewModel = (note) => ({\r\n    _id: note._id,\r\n    name: note.name,\r\n    semester: note.semester,\r\n    url: note.url,\r\n  });\r\n\r\n  handleSubmit = async (\r\n    { _id, name, semester, url },\r\n    { setErrors, resetForm }\r\n  ) => {\r\n    try {\r\n      const { value } = await alert(\"Are you confirm?\", \"warning\");\r\n      if (value) {\r\n        const courseId = this.props.match.params.courseId;\r\n        await saveNote(_id, name, semester, url, courseId);\r\n        resetForm({ values: \"\" });\r\n        this.props.history.goBack();\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const { data } = error.response;\r\n        setErrors({ name: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      getCurrentUser().batch === this.props.match.params.batchId ||\r\n      getCurrentUser().isAdmin\r\n    )\r\n      return (\r\n        <>\r\n          <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n            <div className=\"col-8 row  p-0 m-0 justify-content-center align-items-center\">\r\n              <div className=\"noteContainer\">\r\n                <div className=\"noteHeader\">\r\n                  <h3 className=\"m-0 p-0\">Add Note</h3>\r\n                </div>\r\n                <div className=\"p-5\">\r\n                  <AppForm\r\n                    initialValues={this.state.note}\r\n                    onSubmit={this.handleSubmit}\r\n                    validationSchema={this.validateSchema}\r\n                    enableReinitialize\r\n                  >\r\n                    <form noValidate autoComplete=\"off\" className=\"mt-1\">\r\n                      <Input name=\"name\" label=\"Note Name\" color=\"primary\" />\r\n                      <Input name=\"semester\" label=\"Semester\" color=\"primary\" />\r\n                      <Input\r\n                        name=\"url\"\r\n                        label=\"File Url\"\r\n                        placeholder=\"https://drive.google.com/.....\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <SubmitButton\r\n                        color=\"primary\"\r\n                        className=\"mt-4 w-100\"\r\n                        label=\"Add Note\"\r\n                      />\r\n                    </form>\r\n                  </AppForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default NoteForm;\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/questions\";\r\n\r\nexport function getQuestions() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function saveQuestion(_id, name, semester, url, courseId) {\r\n  if (_id) {\r\n    return http.put(apiEndPoint + `/${_id}`, { name, semester, url });\r\n  }\r\n\r\n  return http.post(apiEndPoint, { name, semester, url, courseId });\r\n}\r\n\r\nexport function deleteQuestion(id) {\r\n  return http.delete(apiEndPoint + `/${id}`);\r\n}\r\n\r\nexport function getQuestionById(id) {\r\n  return http.get(apiEndPoint + `/${id}`);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport MyTable from \"../common/Table\";\r\nimport DeleteButton from \"../common/DeleteButton\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass QuestionTable extends Component {\r\n  columns = [\r\n    {\r\n      label: \"Name\",\r\n      path: \"name\",\r\n      content: (question) => {\r\n        if (\r\n          question.user._id === getCurrentUser()._id ||\r\n          getCurrentUser().isAdmin\r\n        )\r\n          return (\r\n            <Link\r\n              to={`/aust-note-book/${this.props.batchId}/${this.props.courseId}/question/${question._id}`}\r\n              className=\"font-weight-bold\"\r\n            >\r\n              {question.name}\r\n            </Link>\r\n          );\r\n        else return <span className=\"\">{question.name}</span>;\r\n      },\r\n    },\r\n    { label: \"Semester\", path: \"semester\" },\r\n    { label: \"Added By\", path: \"user.varsityId\" },\r\n    { label: \"Date Upload\", path: \"datePublished\" },\r\n    {\r\n      label: \"File\",\r\n      key: \"file\",\r\n      content: (question) => (\r\n        <a href={`${question.url}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Download\r\n        </a>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (question) =>\r\n      (question.user._id === getCurrentUser()._id ||\r\n        getCurrentUser().isAdmin) && (\r\n        <DeleteButton\r\n          handleClick={() => this.props.onDelete(question)}\r\n          className=\"deleteButton\"\r\n        />\r\n      ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { questions, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <FadeIn className=\"container m-2\">\r\n        <MyTable\r\n          onSort={onSort}\r\n          data={questions}\r\n          sortColumn={sortColumn}\r\n          columns={this.columns}\r\n        />\r\n      </FadeIn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionTable;\r\n","import React, { Component } from \"react\";\r\nimport { SemipolarLoading } from \"react-loadingg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\n\r\nimport Button from \"../common/Button\";\r\nimport Pagination from \"./../common/Pagination\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport { alert } from \"./../utils/alert\";\r\n\r\nimport { Comment } from \"../index\";\r\nimport {\r\n  getCommentsByCourse,\r\n  deleteComment,\r\n  postComment,\r\n} from \"./../../service/commentService\";\r\nimport { getQuestions, deleteQuestion } from \"../../service/questionService\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport QuestionTable from \"./QuestionTable\";\r\n\r\nclass Question extends Component {\r\n  state = {\r\n    allQuestions: [],\r\n    filteredQuestions: [],\r\n    comments: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    sortColumn: {},\r\n    loading: Boolean,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setState({ loading: true });\r\n      await this.populateQuestions();\r\n      await this.populateComments();\r\n      this.setState({ loading: false });\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong.\");\r\n    }\r\n  }\r\n\r\n  populateQuestions = async () => {\r\n    const { courseId } = this.props.match.params;\r\n    let {\r\n      data: { data: allQuestions },\r\n    } = await getQuestions();\r\n\r\n    allQuestions = allQuestions.map((question) => ({\r\n      ...question,\r\n      datePublished: new Date(question.datePublished).toLocaleString(),\r\n    }));\r\n\r\n    const filteredQuestions = allQuestions.filter(\r\n      (question) => question.course._id === courseId\r\n    );\r\n    this.setState({ allQuestions, filteredQuestions });\r\n  };\r\n\r\n  populateComments = async () => {\r\n    const { courseId } = this.props.match.params;\r\n    const {\r\n      data: { data: comments },\r\n    } = await getCommentsByCourse(courseId, \"questions\");\r\n\r\n    this.setState({ comments });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleTableSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleQuestionDelete = async (question) => {\r\n    const originalQuestions = this.state.filteredQuestions;\r\n\r\n    const filteredQuestions = originalQuestions.filter(\r\n      (q) => q._id !== question._id\r\n    );\r\n\r\n    const { value } = await alert(\"Are you sure?\", \"warning\");\r\n    if (value) {\r\n      this.setState({ filteredQuestions });\r\n      try {\r\n        await deleteQuestion(question._id);\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          toast.error(\"This question has already been deleted.\");\r\n          this.setState({ filteredQuestions: originalQuestions });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleCommentSubmit = async ({ comment }, { resetForm }) => {\r\n    const { courseId } = this.props.match.params;\r\n    const originalComments = this.state.comments;\r\n    try {\r\n      const currentUser = getCurrentUser();\r\n      const comments = [\r\n        {\r\n          _id: comment,\r\n          user: {\r\n            varsityId: currentUser.varsityId,\r\n            photo: currentUser.photo,\r\n          },\r\n          comment: comment,\r\n        },\r\n        ...originalComments,\r\n      ];\r\n      this.setState({ comments });\r\n      await postComment(courseId, comment, \"questions\");\r\n      resetForm({ values: \"\" });\r\n    } catch (error) {\r\n      this.setState({ comments: originalComments });\r\n      toast.error(\"Something went wrong. comment not posted\");\r\n    }\r\n  };\r\n\r\n  handleCommentDelete = async (comment) => {\r\n    const { courseId } = this.props.match.params;\r\n    const originalComments = this.state.comments;\r\n    try {\r\n      const { value } = await alert(\"Are you confirm?\", \"warning\");\r\n      if (value) {\r\n        const comments = originalComments.filter((c) => c._id !== comment._id);\r\n        this.setState({ comments });\r\n        await deleteComment(courseId, comment._id);\r\n      }\r\n    } catch (error) {\r\n      this.setState({ comments: originalComments });\r\n      toast.error(\"Comment already deleted\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      filteredQuestions,\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      comments,\r\n    } = this.state;\r\n    const { batchId, courseId } = this.props.match.params;\r\n\r\n    const sorted = _.orderBy(\r\n      filteredQuestions,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n    const questions = paginate(sorted, pageSize, currentPage);\r\n\r\n    if (this.state.loading) return <SemipolarLoading />;\r\n\r\n    return (\r\n      <div className=\"row justify-content-center h-100 w-100\">\r\n        <div className=\"col-12 p-0 m-0\">\r\n          <QuestionTable\r\n            questions={questions}\r\n            onDelete={this.handleQuestionDelete}\r\n            onSort={this.handleTableSort}\r\n            sortColumn={sortColumn}\r\n            courseId={courseId}\r\n            batchId={batchId}\r\n          />\r\n        </div>\r\n        {(getCurrentUser().batch === batchId || getCurrentUser().isAdmin) && (\r\n          <div className=\"col-9 row justify-content-between align-items-center\">\r\n            <p className=\"text-white\">\r\n              Total Questions: {filteredQuestions.length}\r\n            </p>\r\n            <Button color=\"primary\">\r\n              <Link\r\n                to={`/aust-note-book/${batchId}/${courseId}/question/add-question`}\r\n                className=\"text-decoration-none text-white\"\r\n              >\r\n                Add Question\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className=\"col-12 mt-2 d-flex justify-content-center\">\r\n          <Pagination\r\n            itemCounts={filteredQuestions.length}\r\n            pageOnChange={this.handlePageChange}\r\n            pageSize={pageSize}\r\n          />\r\n        </div>\r\n        {(getCurrentUser().batch === batchId || getCurrentUser().isAdmin) && (\r\n          <div className=\"col-11 mt-3 p-5 text-left\">\r\n            <p className=\"text-white\">Total Comments: {comments.length}</p>\r\n            <Comment\r\n              comments={comments}\r\n              courseId={courseId}\r\n              path=\"questions\"\r\n              handleCommentSubmit={this.handleCommentSubmit}\r\n              handleCommentDelete={this.handleCommentDelete}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { alert } from \"../utils/alert\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Input, SubmitButton, AppForm } from \"../common/Form\";\r\nimport { getCurrentUser } from \"../../service/authService\";\r\nimport { saveQuestion, getQuestionById } from \"../../service/questionService\";\r\nimport \"./questionForm.css\";\r\n\r\nclass QuestionForm extends Component {\r\n  state = {\r\n    question: {\r\n      _id: \"\",\r\n      name: \"\",\r\n      semester: \"\",\r\n      url: \"\",\r\n    },\r\n  };\r\n\r\n  validateSchema = Yup.object().shape({\r\n    name: Yup.string().min(3).required().label(\"First Name\"),\r\n    semester: Yup.string()\r\n      .min(3)\r\n      .required()\r\n      .matches(\r\n        /^(spring|fall)(-)(20)(\\d\\d)$/i,\r\n        'Format have to \"spring-xxxx\" or \"fall-xxxx\"'\r\n      )\r\n      .label(\"Last Name\"),\r\n    url: Yup.string().required().label(\"Url\"),\r\n  });\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const { questionPath } = this.props.match.params;\r\n\r\n      if (questionPath === \"add-question\") return;\r\n      const { data: question } = await getQuestionById(questionPath);\r\n      this.setState({ question: this.mapToViewModel(question) });\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        (error.response.status === 404 || error.response.status === 400)\r\n      )\r\n        this.props.history.replace(\"/aust-note-book/not-found\");\r\n    }\r\n  }\r\n\r\n  mapToViewModel = (question) => ({\r\n    _id: question._id,\r\n    name: question.name,\r\n    semester: question.semester,\r\n    url: question.url,\r\n  });\r\n\r\n  handleSubmit = async (\r\n    { _id, name, semester, url },\r\n    { setErrors, resetForm }\r\n  ) => {\r\n    try {\r\n      const { value } = await alert(\"Are you confirm?\", \"warning\");\r\n      if (value) {\r\n        const courseId = this.props.match.params.courseId;\r\n        await saveQuestion(_id, name, semester, url, courseId);\r\n        resetForm({ values: \"\" });\r\n        this.props.history.goBack();\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const { data } = error.response;\r\n        setErrors({ name: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      getCurrentUser().batch === this.props.match.params.batchId ||\r\n      getCurrentUser().isAdmin\r\n    )\r\n      return (\r\n        <>\r\n          <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n            <div className=\"col-8 row  p-0 m-0 justify-content-center align-items-center\">\r\n              <div className=\"questionContainer\">\r\n                <div className=\"questionHeader\">\r\n                  <h3 className=\"m-0 p-0\">Add Question</h3>\r\n                </div>\r\n                <div className=\"p-5\">\r\n                  <AppForm\r\n                    initialValues={this.state.question}\r\n                    onSubmit={this.handleSubmit}\r\n                    validationSchema={this.validateSchema}\r\n                    enableReinitialize\r\n                  >\r\n                    <form noValidate autoComplete=\"off\" className=\"mt-1\">\r\n                      <Input\r\n                        name=\"name\"\r\n                        label=\"Question Name\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <Input name=\"semester\" label=\"Semester\" color=\"primary\" />\r\n                      <Input\r\n                        name=\"url\"\r\n                        label=\"File Url\"\r\n                        placeholder=\"https://drive.google.com/.....\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <SubmitButton\r\n                        color=\"primary\"\r\n                        className=\"mt-4 w-100\"\r\n                        label=\"Add Question\"\r\n                      />\r\n                    </form>\r\n                  </AppForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default QuestionForm;\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/crInfos\";\r\n\r\nexport const getCrs = () => {\r\n  return http.get(apiEndPoint);\r\n};\r\n\r\nexport const addCr = async (\r\n  _id,\r\n  name,\r\n  section,\r\n  group,\r\n  varsityId,\r\n  phoneNumber,\r\n  batchId\r\n) => {\r\n  if (_id) {\r\n    return http.put(apiEndPoint + `/${_id}`, {\r\n      name,\r\n      section,\r\n      group,\r\n      varsityId,\r\n      phoneNumber,\r\n      batchId,\r\n    });\r\n  }\r\n\r\n  return await http.post(apiEndPoint, {\r\n    name,\r\n    section,\r\n    group,\r\n    varsityId,\r\n    phoneNumber,\r\n    batchId,\r\n  });\r\n};\r\n\r\nexport function deleteCr(id) {\r\n  return http.delete(apiEndPoint + `/${id}`);\r\n}\r\n\r\nexport function getCrById(id) {\r\n  return http.get(apiEndPoint + `/${id}`);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport MyTable from \"./../common/Table\";\r\nimport DeleteButton from \"../common/DeleteButton\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass CrTable extends Component {\r\n  state = {};\r\n  columns = [\r\n    {\r\n      label: \"Name\",\r\n      path: \"name\",\r\n      content: (cr) => {\r\n        if (\r\n          (getCurrentUser().role === \"co-admin\" &&\r\n            getCurrentUser().batch === this.props.batchId) ||\r\n          getCurrentUser().isAdmin\r\n        )\r\n          return (\r\n            <Link\r\n              to={`/aust-note-book/${this.props.batchId}/cr/${cr._id}`}\r\n              className=\"font-weight-bold\"\r\n            >\r\n              {cr.name}\r\n            </Link>\r\n          );\r\n        else return <span className=\"font-weight-bold\">{cr.name}</span>;\r\n      },\r\n    },\r\n    { label: \"Section\", path: \"section\" },\r\n    { label: \"Group\", path: \"group\" },\r\n    { label: \"Varsity Id\", path: \"varsityId\" },\r\n    { label: \"Phone Number\", path: \"phoneNumber\" },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (cr) => (\r\n      <DeleteButton\r\n        handleClick={() => this.props.onDelete(cr)}\r\n        className=\"deleteButton\"\r\n      />\r\n    ),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (\r\n      getCurrentUser().isAdmin ||\r\n      (getCurrentUser().role === \"co-admin\" &&\r\n        getCurrentUser().batch === this.props.batchId)\r\n    )\r\n      this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { crs, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <FadeIn className=\"container m-2\">\r\n        <MyTable\r\n          onSort={onSort}\r\n          data={crs}\r\n          sortColumn={sortColumn}\r\n          columns={this.columns}\r\n        />\r\n      </FadeIn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CrTable;\r\n","import React, { Component } from \"react\";\r\nimport { SemipolarLoading } from \"react-loadingg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\n\r\nimport Button from \"../common/Button\";\r\nimport { getCrs, deleteCr } from \"./../../service/crService\";\r\nimport Pagination from \"./../common/Pagination\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport { alert } from \"./../utils/alert\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport CrTable from \"./CrTable\";\r\nimport \"./crInfo.css\";\r\n\r\nclass CrInfo extends Component {\r\n  state = {\r\n    allCrs: [],\r\n    filteredCrs: [],\r\n    pageSize: 8,\r\n    currentPage: 1,\r\n    sortColumn: {},\r\n    loading: Boolean,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    const { batchId } = this.props.match.params;\r\n    let {\r\n      data: { data: allCrs },\r\n    } = await getCrs();\r\n\r\n    const filteredCrs = allCrs.filter((cr) => cr.batch._id === batchId);\r\n\r\n    this.setState({ allCrs, filteredCrs, loading: false });\r\n  }\r\n\r\n  // componentDidUpdate(prevProps) {\r\n  //   const { courseId } = this.props.match.params;\r\n\r\n  //   if (prevProps !== this.props) {\r\n  //     const allNotes = [...this.state.allNotes];\r\n  //     const filteredNotes = allNotes.filter(\r\n  //       (note) => note.course._id === courseId\r\n  //     );\r\n  //     this.setState({ filteredNotes });\r\n  //   }\r\n  // }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleTableSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleCrDelete = async (cr) => {\r\n    const originalCrs = this.state.filteredCrs;\r\n\r\n    const filteredCrs = originalCrs.filter((c) => c._id !== cr._id);\r\n\r\n    const { value } = await alert(\"Are you sure?\", \"warning\");\r\n    if (value) {\r\n      this.setState({ filteredCrs });\r\n      try {\r\n        await deleteCr(cr._id);\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          toast.error(\"This cr has already been deleted.\");\r\n          this.setState({ filteredCrs: originalCrs });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { filteredCrs, pageSize, currentPage, sortColumn } = this.state;\r\n    const { batchId } = this.props.match.params;\r\n\r\n    const sorted = _.orderBy(\r\n      filteredCrs,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n    const crs = paginate(sorted, pageSize, currentPage);\r\n\r\n    if (this.state.loading) return <SemipolarLoading />;\r\n\r\n    return (\r\n      <div className=\"row justify-content-center align-content-center h-100 w-100\">\r\n        <div className=\"col-12 p-0 m-0\">\r\n          <CrTable\r\n            crs={crs}\r\n            onDelete={this.handleCrDelete}\r\n            onSort={this.handleTableSort}\r\n            sortColumn={sortColumn}\r\n            batchId={batchId}\r\n          />\r\n        </div>\r\n        {(getCurrentUser().batch === batchId || getCurrentUser().isAdmin) && (\r\n          <div className=\"col-9 row justify-content-between align-items-center\">\r\n            <p className=\"text-white\">\r\n              Total Cr's information: {filteredCrs.length}\r\n            </p>\r\n            <Button color=\"primary\">\r\n              <Link\r\n                to={`/aust-note-book/${batchId}/cr/add-cr`}\r\n                className=\"text-decoration-none text-white\"\r\n              >\r\n                Add Cr\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className=\"col-12 mt-2 d-flex justify-content-center\">\r\n          <Pagination\r\n            itemCounts={filteredCrs.length}\r\n            pageOnChange={this.handlePageChange}\r\n            pageSize={pageSize}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CrInfo;\r\n","import React from \"react\";\r\nimport {\r\n  Select,\r\n  FormControl,\r\n  FormHelperText,\r\n  MenuItem,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useFormikContext } from \"formik\";\r\n// import ErrorMessage from \"./errorMessage\";\r\n\r\nconst MySelect = ({ name, label, selectedItem, items, ...otherProps }) => {\r\n  const {\r\n    handleChange,\r\n    errors,\r\n    setFieldTouched,\r\n    touched,\r\n    values,\r\n  } = useFormikContext();\r\n\r\n  const isError = (error, visible) => {\r\n    if (!visible || !error) return false;\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        onChange={handleChange(name)}\r\n        value={values[name]}\r\n        onBlur={() => setFieldTouched(name)}\r\n        error={isError(errors[name], touched[name])}\r\n        {...otherProps}\r\n      >\r\n        {selectedItem &&\r\n          items.map((item) => (\r\n            <MenuItem\r\n              key={item._id || item}\r\n              value={item._id || item}\r\n              onClick={() => selectedItem(item._id || item)}\r\n            >\r\n              {item.name || item}\r\n            </MenuItem>\r\n          ))}\r\n\r\n        {!selectedItem &&\r\n          items.map((item) => (\r\n            <MenuItem key={item._id || item} value={item._id || item}>\r\n              {item.name || item}\r\n            </MenuItem>\r\n          ))}\r\n      </Select>\r\n      <FormHelperText>{errors[name]}</FormHelperText>\r\n      {/* <ErrorMessage error={errors[name]} visible={touched[name]} /> */}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default MySelect;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { alert } from \"../utils/alert\";\r\nimport * as Yup from \"yup\";\r\nimport Select from \"../common/Form/Select\";\r\nimport { Input, SubmitButton, AppForm } from \"../common/Form\";\r\nimport { getCurrentUser } from \"../../service/authService\";\r\nimport { addCr, getCrById } from \"../../service/crService\";\r\nimport \"./crForm.css\";\r\n\r\nclass CrForm extends Component {\r\n  state = {\r\n    allGroup: [\r\n      { A: [\"A-1\", \"A-2\"] },\r\n      { B: [\"B-1\", \"B-2\"] },\r\n      { C: [\"C-1\", \"C-2\"] },\r\n      { D: [\"D-1\", \"D-2\"] },\r\n    ],\r\n\r\n    cr: {\r\n      _id: \"\",\r\n      name: \"\",\r\n      section: \"\",\r\n      group: \"\",\r\n      varsityId: \"\",\r\n      phoneNumber: \"\",\r\n    },\r\n\r\n    selectedGroup: [],\r\n  };\r\n\r\n  validateSchema = Yup.object().shape({\r\n    name: Yup.string().min(3).required().label(\"Name\"),\r\n    section: Yup.string().required().label(\"Section\"),\r\n    group: Yup.string().required().label(\"Group\"),\r\n    varsityId: Yup.string()\r\n      .min(9)\r\n      .max(9)\r\n      .required()\r\n      .matches(/^[0-9]+$/, \"Please give your valid varsity id\")\r\n      .label(\"Varsity Id\"),\r\n    phoneNumber: Yup.string().min(11).max(12).required().label(\"Phone No\"),\r\n  });\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const { crPath } = this.props.match.params;\r\n      if (crPath === \"add-cr\") return;\r\n\r\n      const { data: cr } = await getCrById(crPath);\r\n      const selectedGroup = this.state.allGroup.find(\r\n        (section) => section[cr.section]\r\n      );\r\n\r\n      this.setState({\r\n        cr: this.mapToViewModel(cr),\r\n        selectedGroup: selectedGroup[cr.section],\r\n      });\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        (error.response.status === 404 || error.response.status === 400)\r\n      )\r\n        this.props.history.replace(\"/aust-note-book/not-found\");\r\n    }\r\n  }\r\n\r\n  mapToViewModel = (cr) => ({\r\n    _id: cr._id,\r\n    name: cr.name,\r\n    section: cr.section,\r\n    group: cr.group,\r\n    varsityId: cr.varsityId,\r\n    phoneNumber: cr.phoneNumber,\r\n  });\r\n\r\n  handleSubmit = async (\r\n    { _id, name, section, group, varsityId, phoneNumber },\r\n    { setErrors, resetForm }\r\n  ) => {\r\n    try {\r\n      const { value } = await alert(\"Are you confirm?\", \"warning\");\r\n      if (value) {\r\n        const batchId = this.props.match.params.batchId;\r\n        await addCr(\r\n          _id,\r\n          name.toUpperCase(),\r\n          section,\r\n          group,\r\n          varsityId,\r\n          phoneNumber,\r\n          batchId\r\n        );\r\n        resetForm({ values: \"\" });\r\n        this.props.history.goBack();\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const { data } = error.response;\r\n        setErrors({ name: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSection = (sec) => {\r\n    const { allGroup } = this.state;\r\n    const selectedGroup = allGroup.find((section) => section[sec]);\r\n\r\n    this.setState({ selectedGroup: selectedGroup[sec] });\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      getCurrentUser().batch === this.props.match.params.batchId ||\r\n      getCurrentUser().isAdmin\r\n    )\r\n      return (\r\n        <>\r\n          <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n            <div className=\"col-8 row  p-0 m-0 justify-content-center align-items-center\">\r\n              <div className=\"courseContainer\">\r\n                <div className=\"courseHeader\">\r\n                  <h3 className=\"m-0 p-0\">Add Cr</h3>\r\n                </div>\r\n                <div className=\"p-5\">\r\n                  <AppForm\r\n                    initialValues={this.state.cr}\r\n                    onSubmit={this.handleSubmit}\r\n                    validationSchema={this.validateSchema}\r\n                    enableReinitialize\r\n                  >\r\n                    <form noValidate autoComplete=\"off\" className=\"mt-1\">\r\n                      <Input\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        className=\"text-capitalize\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <div className=\"d-flex\">\r\n                        <Select\r\n                          name=\"section\"\r\n                          label=\"Section\"\r\n                          className=\"flex-1 mr-3\"\r\n                          items={[\"A\", \"B\", \"C\", \"D\"]}\r\n                          selectedItem={this.handleSection}\r\n                        />\r\n                        <Select\r\n                          name=\"group\"\r\n                          className=\"flex-1\"\r\n                          label=\"Group\"\r\n                          items={this.state.selectedGroup}\r\n                        />\r\n                      </div>\r\n                      <Input\r\n                        name=\"varsityId\"\r\n                        label=\"Varsity Id\"\r\n                        color=\"primary\"\r\n                        disabled={this.state.cr.varsityId}\r\n                      />\r\n                      <Input\r\n                        name=\"phoneNumber\"\r\n                        label=\"Phone Number\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <SubmitButton\r\n                        color=\"primary\"\r\n                        className=\"mt-4 w-100\"\r\n                        label=\"Add Cr\"\r\n                      />\r\n                    </form>\r\n                  </AppForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default CrForm;\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/teacherInfos\";\r\n\r\nexport const getTeachers = () => {\r\n  return http.get(apiEndPoint);\r\n};\r\n\r\nexport const addTeacher = async (\r\n  _id,\r\n  name,\r\n  courseTitle,\r\n  courseNo,\r\n  email,\r\n  phoneNumber,\r\n  batchId\r\n) => {\r\n  if (_id) {\r\n    return http.put(apiEndPoint + `/${_id}`, {\r\n      name,\r\n      courseTitle,\r\n      courseNo,\r\n      email,\r\n      phoneNumber,\r\n      batchId,\r\n    });\r\n  }\r\n\r\n  return await http.post(apiEndPoint, {\r\n    name,\r\n    courseTitle,\r\n    courseNo,\r\n    email,\r\n    phoneNumber,\r\n    batchId,\r\n  });\r\n};\r\n\r\nexport function deleteTeacher(id) {\r\n  return http.delete(apiEndPoint + `/${id}`);\r\n}\r\n\r\nexport function getTeacherById(id) {\r\n  return http.get(apiEndPoint + `/${id}`);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport MyTable from \"./../common/Table\";\r\nimport DeleteButton from \"../common/DeleteButton\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass TeacherTable extends Component {\r\n  state = {};\r\n  columns = [\r\n    {\r\n      label: \"Name\",\r\n      path: \"name\",\r\n      content: (teacher) => {\r\n        if (\r\n          (getCurrentUser().role === \"co-admin\" &&\r\n            getCurrentUser().batch === this.props.batchId) ||\r\n          getCurrentUser().isAdmin\r\n        )\r\n          return (\r\n            <Link\r\n              to={`/aust-note-book/${this.props.batchId}/teacher/${teacher._id}`}\r\n              className=\"font-weight-bold\"\r\n            >\r\n              {teacher.name}\r\n            </Link>\r\n          );\r\n        else return <span className=\"font-weight-bold\">{teacher.name}</span>;\r\n      },\r\n    },\r\n    { label: \"Course Title\", path: \"courseTitle\" },\r\n    { label: \"Course No\", path: \"courseNo\" },\r\n    { label: \"Email\", path: \"email\" },\r\n    { label: \"Phone Number\", path: \"phoneNumber\" },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (teacher) => (\r\n      <DeleteButton\r\n        handleClick={() => this.props.onDelete(teacher)}\r\n        className=\"deleteButton\"\r\n      />\r\n    ),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (\r\n      getCurrentUser().isAdmin ||\r\n      (getCurrentUser().role === \"co-admin\" &&\r\n        getCurrentUser().batch === this.props.batchId)\r\n    )\r\n      this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { teachers, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <FadeIn className=\"container m-2\">\r\n        <MyTable\r\n          onSort={onSort}\r\n          data={teachers}\r\n          sortColumn={sortColumn}\r\n          columns={this.columns}\r\n        />\r\n      </FadeIn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherTable;\r\n","import React, { Component } from \"react\";\r\nimport { SemipolarLoading } from \"react-loadingg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\n\r\nimport Button from \"../common/Button\";\r\nimport { getTeachers, deleteTeacher } from \"./../../service/teacherService\";\r\nimport Pagination from \"./../common/Pagination\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport { alert } from \"./../utils/alert\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport TeacherTable from \"./TeacherTable\";\r\nimport \"./teacherInfo.css\";\r\n\r\nclass TeacherInfo extends Component {\r\n  state = {\r\n    allTeachers: [],\r\n    filteredTeachers: [],\r\n    pageSize: 8,\r\n    currentPage: 1,\r\n    sortColumn: {},\r\n    loading: Boolean,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    const { batchId } = this.props.match.params;\r\n    let {\r\n      data: { data: allTeachers },\r\n    } = await getTeachers();\r\n\r\n    const filteredTeachers = allTeachers.filter(\r\n      (teacher) => teacher.batch._id === batchId\r\n    );\r\n\r\n    this.setState({ allTeachers, filteredTeachers, loading: false });\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleTableSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleTeacherDelete = async (teacher) => {\r\n    const originalTeachers = this.state.filteredTeachers;\r\n\r\n    const filteredTeachers = originalTeachers.filter(\r\n      (t) => t._id !== teacher._id\r\n    );\r\n\r\n    const { value } = await alert(\"Are you sure?\", \"warning\");\r\n    if (value) {\r\n      this.setState({ filteredTeachers });\r\n      try {\r\n        await deleteTeacher(teacher._id);\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          toast.error(\"This teacher has already been deleted.\");\r\n          this.setState({ filteredTeachers: originalTeachers });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { filteredTeachers, pageSize, currentPage, sortColumn } = this.state;\r\n    const { batchId } = this.props.match.params;\r\n\r\n    const sorted = _.orderBy(\r\n      filteredTeachers,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n    const Teachers = paginate(sorted, pageSize, currentPage);\r\n\r\n    if (this.state.loading) return <SemipolarLoading />;\r\n\r\n    return (\r\n      <div className=\"row justify-content-center align-content-center h-100 w-100\">\r\n        <div className=\"col-12 p-0 m-0\">\r\n          <TeacherTable\r\n            teachers={Teachers}\r\n            onDelete={this.handleTeacherDelete}\r\n            onSort={this.handleTableSort}\r\n            sortColumn={sortColumn}\r\n            batchId={batchId}\r\n          />\r\n        </div>\r\n        {(getCurrentUser().batch === batchId || getCurrentUser().isAdmin) && (\r\n          <div className=\"col-9 row justify-content-between align-items-center\">\r\n            <p className=\"text-white\">\r\n              Total Teacher's information: {filteredTeachers.length}\r\n            </p>\r\n            <Button color=\"primary\">\r\n              <Link\r\n                to={`/aust-note-book/${batchId}/teacher/add-teacher`}\r\n                className=\"text-decoration-none text-white\"\r\n              >\r\n                Add Teacher\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className=\"col-12 mt-2 d-flex justify-content-center\">\r\n          <Pagination\r\n            itemCounts={filteredTeachers.length}\r\n            pageOnChange={this.handlePageChange}\r\n            pageSize={pageSize}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherInfo;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { alert } from \"../utils/alert\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, SubmitButton, AppForm } from \"../common/Form\";\r\nimport { getCurrentUser } from \"../../service/authService\";\r\nimport { addTeacher, getTeacherById } from \"../../service/teacherService\";\r\nimport \"./teacherForm.css\";\r\n\r\nclass TeacherForm extends Component {\r\n  state = {\r\n    teacher: {\r\n      _id: \"\",\r\n      name: \"\",\r\n      courseTitle: \"\",\r\n      courseNo: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n    },\r\n  };\r\n\r\n  validateSchema = Yup.object().shape({\r\n    name: Yup.string().min(3).required().label(\"Name\"),\r\n    courseTitle: Yup.string().required().label(\"Section\"),\r\n    courseNo: Yup.string().required().label(\"Group\"),\r\n    email: Yup.string().email().required().label(\"Email\"),\r\n    phoneNumber: Yup.string().min(11).max(12).required().label(\"Phone No\"),\r\n  });\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const { teacherPath } = this.props.match.params;\r\n\r\n      if (teacherPath === \"add-teacher\") return;\r\n      const { data: teacher } = await getTeacherById(teacherPath);\r\n      this.setState({ teacher: this.mapToViewModel(teacher) });\r\n    } catch (error) {\r\n      if (\r\n        error.response &&\r\n        (error.response.status === 404 || error.response.status === 400)\r\n      )\r\n        this.props.history.replace(\"/aust-note-book/not-found\");\r\n    }\r\n  }\r\n\r\n  mapToViewModel = (teacher) => ({\r\n    _id: teacher._id,\r\n    name: teacher.name,\r\n    courseTitle: teacher.courseTitle,\r\n    courseNo: teacher.courseNo,\r\n    email: teacher.email,\r\n    phoneNumber: teacher.phoneNumber,\r\n  });\r\n\r\n  handleSubmit = async (\r\n    { _id, name, courseTitle, courseNo, email, phoneNumber },\r\n    { setErrors, resetForm }\r\n  ) => {\r\n    try {\r\n      const { value } = await alert(\"Are you confirm?\", \"warning\");\r\n      if (value) {\r\n        const batchId = this.props.match.params.batchId;\r\n        await addTeacher(\r\n          _id,\r\n          name.toUpperCase(),\r\n          courseTitle.toUpperCase(),\r\n          courseNo.toUpperCase(),\r\n          email,\r\n          phoneNumber,\r\n          batchId\r\n        );\r\n        resetForm({ values: \"\" });\r\n        this.props.history.goBack();\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const { data } = error.response;\r\n        setErrors({ name: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      getCurrentUser().batch === this.props.match.params.batchId ||\r\n      getCurrentUser().isAdmin\r\n    )\r\n      return (\r\n        <>\r\n          <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n            <div className=\"col-8 row  p-0 m-0 justify-content-center align-items-center\">\r\n              <div className=\"courseContainer\">\r\n                <div className=\"courseHeader\">\r\n                  <h3 className=\"m-0 p-0\">Add Teacher</h3>\r\n                </div>\r\n                <div className=\"p-5\">\r\n                  <AppForm\r\n                    initialValues={this.state.teacher}\r\n                    onSubmit={this.handleSubmit}\r\n                    validationSchema={this.validateSchema}\r\n                    enableReinitialize\r\n                  >\r\n                    <form noValidate autoComplete=\"off\" className=\"mt-1\">\r\n                      <Input\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        className=\"text-capitalize\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <div className=\"d-flex\">\r\n                        <Input\r\n                          name=\"courseTitle\"\r\n                          label=\"Course Title\"\r\n                          className=\"flex-1 mr-3\"\r\n                          color=\"primary\"\r\n                        />\r\n                        <Input\r\n                          name=\"courseNo\"\r\n                          label=\"Course No\"\r\n                          className=\"flex-1\"\r\n                          color=\"primary\"\r\n                        />\r\n                      </div>\r\n                      <Input name=\"email\" label=\"Email\" color=\"primary\" />\r\n                      <Input\r\n                        name=\"phoneNumber\"\r\n                        label=\"Phone Number\"\r\n                        color=\"primary\"\r\n                      />\r\n                      <SubmitButton\r\n                        color=\"primary\"\r\n                        className=\"mt-4 w-100\"\r\n                        label=\"Add Teacher\"\r\n                      />\r\n                    </form>\r\n                  </AppForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default TeacherForm;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst Navbar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark justify-content-between fixed-top\">\r\n      <div>\r\n        <NavLink to=\"/\" className=\"nav-link text-white font-weight-bold\">\r\n          <h5>AustNoteBook</h5>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div\r\n          className=\"collapse navbar-collapse text-white bg-dark p-3\"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            {user && (\r\n              <>\r\n                {\" \"}\r\n                <li className=\"nav-item d-flex ml-3 align-items-center\">\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={process.env.PROFILE_PICTURE_URL + \"/\" + user.photo}\r\n                  />\r\n                  <NavLink to=\"/profile\" className=\"nav-link\">\r\n                    {user.varsityId}\r\n                  </NavLink>\r\n                  {user.isAdmin && (\r\n                    <span className=\"text-success font-weight-bold\">Admin</span>\r\n                  )}\r\n                  {user.role === \"co-admin\" && (\r\n                    <span className=\"text-primary font-weight-bold\">\r\n                      Co-admin\r\n                    </span>\r\n                  )}\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink to=\"/logout\" className=\"nav-link\">\r\n                    Logout\r\n                  </NavLink>\r\n                </li>\r\n              </>\r\n            )}\r\n\r\n            {!user && (\r\n              <>\r\n                {\" \"}\r\n                <li className=\"nav-item\">\r\n                  <NavLink to=\"/login\" className=\"nav-link\">\r\n                    Login\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink to=\"/registration\" className=\"nav-link\">\r\n                    Register\r\n                  </NavLink>\r\n                </li>{\" \"}\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Input, SubmitButton, AppForm } from \"../common/Form\";\r\nimport { login } from \"../../service/authService\";\r\nimport Navbar from \"../Navbar\";\r\nimport { getCurrentUser } from \"../../service/authService\";\r\nimport \"./login.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass LoginForm extends Component {\r\n  validateSchema = Yup.object().shape({\r\n    email: Yup.string().email().required().label(\"Email\"),\r\n    password: Yup.string().required().min(4).label(\"Password\"),\r\n  });\r\n\r\n  handleSubmit = async ({ email, password }, { setErrors, resetForm }) => {\r\n    try {\r\n      await login(email, password);\r\n      toast.success(\"Signed in successfully.\");\r\n      resetForm({ values: \"\" });\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const { data } = error.response;\r\n        setErrors({ email: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n          <div className=\"col-8 row  p-0 m-0 justify-content-center align-items-center\">\r\n            <div className=\"loginContainer\">\r\n              <div className=\"loginHeader\">\r\n                <h1>Login</h1>\r\n              </div>\r\n              <div className=\"p-5\">\r\n                <AppForm\r\n                  initialValues={{ email: \"\", password: \"\" }}\r\n                  onSubmit={this.handleSubmit}\r\n                  validationSchema={this.validateSchema}\r\n                >\r\n                  <form noValidate autoComplete=\"off\" className=\"mt-3\">\r\n                    <Input name=\"email\" label=\"Email\" color=\"primary\" />\r\n                    <Input\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      className=\"my-2\"\r\n                      color=\"primary\"\r\n                      type=\"password\"\r\n                    />\r\n                    <SubmitButton\r\n                      color=\"primary\"\r\n                      className=\"mt-5 w-100\"\r\n                      label=\"Login\"\r\n                    />\r\n                  </form>\r\n                </AppForm>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/users\";\r\nconst tokenKey = \"token\";\r\n\r\nexport const registration = async ({\r\n  firstName,\r\n  lastName,\r\n  varsityId,\r\n  departmentId,\r\n  batchId,\r\n  email,\r\n  password,\r\n}) => {\r\n  const { headers } = await http.post(apiEndPoint, {\r\n    firstName,\r\n    lastName,\r\n    varsityId,\r\n    departmentId,\r\n    batchId,\r\n    email,\r\n    password,\r\n  });\r\n\r\n  localStorage.setItem(tokenKey, headers[\"x-auth-token\"]);\r\n};\r\n\r\nexport const getProfile = () => {\r\n  return http.get(apiEndPoint + \"/me\");\r\n};\r\n\r\nexport const addProfilePicture = (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  return http.put(apiEndPoint + \"/me/photo\", formData);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  Input,\r\n  ImageSubmitButton,\r\n  SubmitButton,\r\n  AppForm,\r\n  ImageFileInput,\r\n} from \"../common/Form\";\r\nimport { addProfilePicture } from \"../../service/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\n\r\nclass Profile extends Component {\r\n  validateSchema = Yup.object().shape({\r\n    file: Yup.mixed().required(\"A image is required.\"),\r\n  });\r\n\r\n  handleSubmit = async ({ file }, { setErrors }) => {\r\n    try {\r\n      await addProfilePicture(file);\r\n      toast.success(\"Image uploaded successfully.\");\r\n      window.location.reload();\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const { data } = error.response;\r\n        setErrors({ file: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (!getCurrentUser()) return <Redirect to=\"/login\" />;\r\n\r\n    const { user } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n          <div className=\"col-8 row  p-0 m-0 justify-content-center align-items-center\">\r\n            <div className=\"registrationContainer\">\r\n              <div>\r\n                <img\r\n                  src={\r\n                    process.env.PROFILE_PICTURE_URL + \"/\" + _.get(user, \"photo\")\r\n                  }\r\n                  className=\"rounded mx-auto d-block rounded-circle w-25 h-25\"\r\n                  alt=\"...\"\r\n                ></img>\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <ImageSubmitButton className=\"\" htmlFor=\"icon-button-file\" />\r\n                </label>\r\n              </div>\r\n              <div className=\"px-5 pb-5\">\r\n                <AppForm\r\n                  initialValues={{\r\n                    file: {},\r\n                  }}\r\n                  onSubmit={this.handleSubmit}\r\n                  validationSchema={this.validateSchema}\r\n                >\r\n                  <form noValidate autoComplete=\"off\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <ImageFileInput\r\n                        name=\"file\"\r\n                        className=\"d-none\"\r\n                        id=\"icon-button-file\"\r\n                      />\r\n\r\n                      <SubmitButton\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        className=\"\"\r\n                        label=\"Upload\"\r\n                      />\r\n                    </div>\r\n                  </form>\r\n\r\n                  <div className=\"d-flex mt-2\">\r\n                    <Input\r\n                      value={user.firstName}\r\n                      name=\"fistName\"\r\n                      color=\"primary\"\r\n                      className=\"flex-1 mr-3\"\r\n                      disabled\r\n                    />\r\n                    <Input\r\n                      value={user.lastName}\r\n                      name=\"lastName\"\r\n                      color=\"primary\"\r\n                      className=\"flex-1\"\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                  <Input\r\n                    value={user.varsityId}\r\n                    name=\"varsityId\"\r\n                    color=\"primary\"\r\n                    className=\"mt-2\"\r\n                    disabled\r\n                  />\r\n                  <Input\r\n                    value={user.email}\r\n                    name=\"email\"\r\n                    color=\"primary\"\r\n                    className=\"mt-2\"\r\n                    disabled\r\n                  />\r\n                  <div className=\"d-flex mt-2\">\r\n                    <Input\r\n                      value={_.get(user, \"department.name\")}\r\n                      name=\"department\"\r\n                      color=\"primary\"\r\n                      className=\"flex-1 mr-3\"\r\n                      disabled\r\n                    />\r\n                    <Input\r\n                      value={_.get(user, \"batch.name\")}\r\n                      name=\"batch\"\r\n                      color=\"primary\"\r\n                      className=\"flex-1\"\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </AppForm>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/departments\";\r\n\r\nexport const getDepartments = () => {\r\n  return http.get(apiEndPoint);\r\n};\r\n","import http from \"./http\";\r\n\r\nconst apiEndPoint = \"/batches\";\r\nconst apiEndPoint2 = \"/departments\";\r\n\r\nexport const getBatches = () => {\r\n  return http.get(apiEndPoint);\r\n};\r\n\r\nexport const getBatchById = (id) => {\r\n  return http.get(apiEndPoint2 + `/${id}/batches`);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Input, SubmitButton, AppForm } from \"../common/Form\";\r\nimport { registration } from \"./../../service/userService\";\r\nimport Select from \"../common/Form/Select\";\r\nimport { getDepartments } from \"../../service/departmentService\";\r\nimport { getBatchById } from \"../../service/batchService\";\r\nimport { getCurrentUser } from \"../../service/authService\";\r\nimport \"./registration.css\";\r\nimport Navbar from \"../Navbar\";\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    departments: [],\r\n    batches: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      data: { data: departments },\r\n    } = await getDepartments();\r\n\r\n    this.setState({ departments });\r\n  }\r\n\r\n  handleDepartmentSelection = async (departmentId) => {\r\n    const {\r\n      data: { data: batches },\r\n    } = await getBatchById(departmentId);\r\n    this.setState({ batches });\r\n  };\r\n\r\n  validateSchema = Yup.object().shape({\r\n    firstName: Yup.string().min(3).required().label(\"First Name\"),\r\n    lastName: Yup.string().min(3).required().label(\"Last Name\"),\r\n    varsityId: Yup.string()\r\n      .min(9)\r\n      .max(9)\r\n      .required()\r\n      .matches(/^[0-9]+$/, \"Please give your valid varsity id\")\r\n      .label(\"Varsity Id\"),\r\n    departmentId: Yup.string().required().label(\"Department\"),\r\n    batchId: Yup.string().required().label(\"Batch\"),\r\n    email: Yup.string().email().required().label(\"Email\"),\r\n    password: Yup.string().required().min(4).label(\"Password\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Password must match\")\r\n      .required(\"Password confirm is required.\"),\r\n  });\r\n\r\n  handleSubmit = async (values, { setErrors, resetForm }) => {\r\n    try {\r\n      await registration(values);\r\n      resetForm({ values: \"\" });\r\n      window.location = \"/\";\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const { data } = error.response;\r\n        setErrors({ varsityId: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"row h-100 w-100 justify-content-center align-items-center p-0 m-0\">\r\n          <div className=\"col-8 row  p-0 m-0 justify-content-center align-items-center\">\r\n            <div className=\"registrationContainer\">\r\n              <div className=\"registrationHeader\">\r\n                <h3 className=\"m-0 p-0\">Registration</h3>\r\n              </div>\r\n              <div className=\"p-5\">\r\n                <AppForm\r\n                  initialValues={{\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    varsityId: \"\",\r\n                    batchId: \"\",\r\n                    departmentId: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\",\r\n                  }}\r\n                  onSubmit={this.handleSubmit}\r\n                  validationSchema={this.validateSchema}\r\n                >\r\n                  <form noValidate autoComplete=\"off\" className=\"mt-1\">\r\n                    <div className=\"d-flex\">\r\n                      <Input\r\n                        name=\"firstName\"\r\n                        label=\"First Name\"\r\n                        color=\"primary\"\r\n                        className=\"flex-1 mr-3\"\r\n                      />\r\n                      <Input\r\n                        name=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        color=\"primary\"\r\n                        className=\"flex-1\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                      <Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        className=\"flex-1 mr-3\"\r\n                        items={this.state.departments}\r\n                        selectedItem={this.handleDepartmentSelection}\r\n                      />\r\n                      <Select\r\n                        name=\"batchId\"\r\n                        className=\"flex-1\"\r\n                        label=\"Batch\"\r\n                        items={this.state.batches}\r\n                      />\r\n                    </div>\r\n                    <Input\r\n                      name=\"varsityId\"\r\n                      label=\"Varsity Id\"\r\n                      color=\"primary\"\r\n                    />\r\n                    <Input name=\"email\" label=\"Email\" color=\"primary\" />\r\n                    <Input\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      color=\"primary\"\r\n                      type=\"password\"\r\n                    />\r\n                    <Input\r\n                      name=\"confirmPassword\"\r\n                      label=\"Confirm Password\"\r\n                      color=\"primary\"\r\n                      type=\"password\"\r\n                    />\r\n                    <SubmitButton\r\n                      color=\"primary\"\r\n                      className=\"mt-4 w-100\"\r\n                      label=\"Register\"\r\n                    />\r\n                  </form>\r\n                </AppForm>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DeleteButton from \"../common/DeleteButton\";\r\nimport _ from \"lodash\";\r\n\r\nconst ShowComments = ({ comments, deleteButton, handleDelete }) => {\r\n  return (\r\n    <>\r\n      {comments.map((comment) => (\r\n        <div className=\"comment\" key={comment._id}>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <Avatar\r\n                alt=\"Remy Sharp\"\r\n                src={\r\n                  process.env.PROFILE_PICTURE_URL +\r\n                  \"/\" +\r\n                  _.get(comment, \"user.photo\")\r\n                }\r\n              />\r\n              <p className=\"text-muted\">{_.get(comment, \"user.varsityId\")}</p>\r\n            </div>\r\n            <div>\r\n              {deleteButton(comment) && (\r\n                <DeleteButton\r\n                  className=\"deleteButton\"\r\n                  handleClick={() => handleDelete(comment)}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex bg-white message\">\r\n            <p className=\"text-justify\">{comment.comment}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowComments;\r\n","import React from \"react\";\r\nimport { Input, SubmitButton, AppForm } from \"../common/Form\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst CommentForm = ({ handleCommentSubmit }) => {\r\n  const validateSchema = Yup.object().shape({\r\n    comment: Yup.string().required().label(\"Comment\"),\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-5 bg-white\" style={{ borderRadius: \"5px\" }}>\r\n      <AppForm\r\n        initialValues={{ comment: \"\" }}\r\n        onSubmit={handleCommentSubmit}\r\n        validationSchema={validateSchema}\r\n      >\r\n        <form noValidate autoComplete=\"off\" className=\"d-flex mt-3\">\r\n          <Input\r\n            name=\"comment\"\r\n            label=\"Comment\"\r\n            multiline\r\n            rows={3}\r\n            placeholder=\"Give a comment...\"\r\n            color=\"primary\"\r\n          />\r\n          <SubmitButton\r\n            color=\"primary\"\r\n            className=\" align-self-end ml-2\"\r\n            label=\"comment\"\r\n          />\r\n        </form>\r\n      </AppForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { Component } from \"react\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport Pagination from \"./../common/Pagination\";\r\nimport ShowComments from \"./ShowComments\";\r\nimport { getCurrentUser } from \"./../../service/authService\";\r\nimport \"./comment.css\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nclass Comment extends Component {\r\n  state = {\r\n    comments: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const comments = this.props.comments;\r\n    this.setState({ comments });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps !== this.props) {\r\n      const comments = this.props.comments;\r\n      this.setState({ comments });\r\n    }\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const { comments, pageSize, currentPage } = this.state;\r\n\r\n    const filteredComments = paginate(comments, pageSize, currentPage);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"row h-100 w-100\">\r\n          <div className=\"col-12 p-0 m-0\">\r\n            <ShowComments\r\n              comments={filteredComments}\r\n              deleteButton={(comment) =>\r\n                comment.user._id === getCurrentUser()._id ||\r\n                getCurrentUser().isAdmin\r\n              }\r\n              handleDelete={(comment) =>\r\n                this.props.handleCommentDelete(comment)\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mt-2 d-flex justify-content-center\">\r\n            <Pagination\r\n              itemCounts={comments.length}\r\n              pageOnChange={this.handlePageChange}\r\n              pageSize={pageSize}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 m-0 p-0 mt-5\">\r\n            <CommentForm handleCommentSubmit={this.props.handleCommentSubmit} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../../service/authService\";\r\n\r\nconst ProtectedRouter = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRouter;\r\n","import React from \"react\";\r\n\r\nconst notFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default notFound;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { SemipolarLoading } from \"react-loadingg\";\r\nimport {\r\n  Department,\r\n  Batch,\r\n  Features,\r\n  Courses,\r\n  Notes,\r\n  Questions,\r\n  CrInfos,\r\n  TeacherInfos,\r\n  AddCourse,\r\n  AddNote,\r\n  AddQuestion,\r\n  AddTeacher,\r\n  AddCr,\r\n  Homepage,\r\n} from \"./index\";\r\nimport ProtectedRouter from \"./common/ProtectedRouter\";\r\nimport { getDepartments } from \"./../service/departmentService\";\r\nimport { getBatches } from \"./../service/batchService\";\r\nimport notFound from \"./notFound\";\r\n\r\nclass AustNoteBook extends Component {\r\n  abortController = new AbortController();\r\n\r\n  state = {\r\n    departments: [],\r\n    batches: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    const { data: departmentsObject } = await getDepartments();\r\n    const { data: batchesObject } = await getBatches();\r\n\r\n    const { data: departments } = departmentsObject;\r\n    const { data: batches } = batchesObject;\r\n\r\n    this.setState({ departments, batches, loading: false });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) return <SemipolarLoading />;\r\n\r\n    return (\r\n      <>\r\n        <main className=\"myContainer\">\r\n          <div className=\"row w-100 h-100 p-0 m-0\">\r\n            <div className=\"col-lg-2 col-md-2 col-2 p-0 m-0 leftContainer\">\r\n              <div className=\"row h-100 w-100 align-content-center justify-content-center p-0 m-0\">\r\n                <div className=\"w-100 h-75 p-2\">\r\n                  <Department departments={this.state.departments} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-10 col-md-10 col-10 m-0 p-0 rightContainer mt-5\">\r\n              <Switch>\r\n                <Route\r\n                  path=\"/aust-note-book/departments\"\r\n                  component={Homepage}\r\n                />\r\n                <Route\r\n                  path=\"/aust-note-book/:departmentId/batches\"\r\n                  render={(props) => (\r\n                    <Batch batches={this.state.batches} {...props} />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/aust-note-book/:batchId/features\"\r\n                  render={(props) => (\r\n                    <Features batches={this.state.batches} {...props} />\r\n                  )}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/courses/:path\"\r\n                  render={(props) => <Courses {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/:courseId/notes\"\r\n                  render={(props) => <Notes {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/:courseId/questions\"\r\n                  render={(props) => <Questions {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/teacher_infos\"\r\n                  render={(props) => <TeacherInfos {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/cr_infos\"\r\n                  render={(props) => <CrInfos {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/add-course\"\r\n                  render={(props) => <AddCourse {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/teacher/:teacherPath\"\r\n                  render={(props) => <AddTeacher {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/cr/:crPath\"\r\n                  render={(props) => <AddCr {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/:courseId/note/:notePath\"\r\n                  render={(props) => <AddNote {...props} />}\r\n                />\r\n\r\n                <ProtectedRouter\r\n                  path=\"/aust-note-book/:batchId/:courseId/question/:questionPath\"\r\n                  render={(props) => <AddQuestion {...props} />}\r\n                />\r\n\r\n                <Route path=\"/aust-note-book/not-found\" component={notFound} />\r\n                <Redirect\r\n                  from=\"/aust-note-book\"\r\n                  exact\r\n                  to=\"/aust-note-book/departments\"\r\n                />\r\n                <Redirect to=\"/aust-note-book/not-found\" />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AustNoteBook;\r\n","import { Component } from \"react\";\r\nimport { logout } from \"../service/authService\";\r\n\r\nclass Logout extends Component {\r\n  async componentDidMount() {\r\n    await logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { toast } from \"react-toastify\";\nimport AustNoteBook from \"./components/AustNoteBook\";\nimport { Login, Registration, Navbar, Profile } from \"./components\";\nimport notFound from \"./components/notFound\";\nimport Logout from \"./components/Logout\";\nimport { getProfile } from \"./service/userService\";\nimport ProtectedRouter from \"./components/common/ProtectedRouter\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [user, setUser] = useState({});\n\n  const getUser = async () => {\n    try {\n      const { data: user } = await getProfile();\n      setUser(user);\n      toast.info(`${user.firstName}, welcome to AustNoteBook.`);\n    } catch (error) {\n      setUser(\"\");\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  return (\n    <>\n      <ToastContainer />\n      <Navbar user={user} />\n      <main className=\"myContainer\">\n        <Switch>\n          <Route path=\"/aust-note-book\" component={AustNoteBook} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/registration\" component={Registration} />\n          <Route path=\"/not-found\" component={notFound} />\n          <ProtectedRouter\n            path=\"/profile\"\n            render={(props) => <Profile {...props} user={user} />}\n          />\n\n          <Redirect from=\"/\" exact to=\"/aust-note-book\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}